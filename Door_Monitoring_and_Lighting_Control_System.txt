/*
 * File:   main.c
 * Author: Dell
 *
 * Created on 8 January, 2025, 11:47 AM
 */


#include <xc.h>

#define _XTAL_FREQ 20000000

// CONFIG
#pragma config FOSC = HS        // Oscillator Selection bits (HS oscillator)
#pragma config WDTE = OFF       // Watchdog Timer Enable bit (WDT disabled)
#pragma config PWRTE = OFF      // Power-up Timer Enable bit (PWRT disabled)
#pragma config BOREN = ON       // Brown-out Reset Enable bit (BOR enabled)
#pragma config LVP = ON         // Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit (RB3/PGM pin has PGM function; low-voltage programming enabled)
#pragma config CPD = OFF        // Data EEPROM Memory Code Protection bit (Data EEPROM code protection off)
#pragma config WRT = OFF        // Flash Program Memory Write Enable bits (Write protection off; all program memory may be written to by EECON control)
#pragma config CP = ON          // Flash Program Memory Code Protection bit (All program memory code-protected)

// #pragma config statements should precede project file includes.
// Use project enums instead of #define for ON and OFF.

#define RS PORTBbits.RB0
#define RW PORTBbits.RB1
#define EN PORTBbits.RB2

void door_status();
void lcd_data(unsigned char data)
{
    PORTC = data;
    RS = 1;
    RW = 0;
    EN = 1;
    __delay_ms(5);
    EN = 0;
}

void lcd_cmd(unsigned char cmd)
{
    PORTC = cmd;
    RS = 0;
    RW = 0;
    EN = 1;
    __delay_ms(5);
    EN = 0;
}

void lcd_string(unsigned char *str,unsigned int Num)
{
    unsigned int i;
    for(i=0;i<Num;i++)
    {
        lcd_data(str[i]);
    }
}

void lcd_init()
{
    lcd_cmd(0x38);
    lcd_cmd(0x0C);
    lcd_cmd(0x06);
    lcd_cmd(0x01);
}

void main(void) 
{
    TRISB = 0x00;
    TRISC = 0x00;
    TRISD = 0xFF;
    
    lcd_init();
    
    while(1)
    {
        door_status();
    }
    
    
    return;
}

void door_status()
{
    if(PORTDbits.RD0==1)
        {
            lcd_cmd(0x80);
            lcd_string("FRONT LEFT DOOR ",16);
            lcd_cmd(0xC5);
            lcd_string("IS OPEN",7);
        }
        
        if(PORTDbits.RD1==1)
        {
            lcd_cmd(0x80);
            lcd_string("FRONT RIGHT DOOR",16);
            lcd_cmd(0xC5);
            lcd_string("IS OPEN",7);
        }
        
        if(PORTDbits.RD2==1)
        {
            lcd_cmd(0x80);
            lcd_string("REAR LEFT DOOR  ",16);
            lcd_cmd(0xC5);
            lcd_string("IS OPEN",7);
        }
        
        if(PORTDbits.RD3==1)
        {
            lcd_cmd(0x80);
            lcd_string("REAR RIGHT DOOR ",16);
            lcd_cmd(0xC5);
            lcd_string("IS OPEN",7);
        }
    if(PORTDbits.RD0 == 1 || PORTDbits.RD1 == 1|| PORTDbits.RD2 == 1 || PORTDbits.RD3 == 1)
    {
        PORTBbits.RB6 = 1;
    }
    else
    {
        PORTBbits.RB6 = 0;
    }
    
    PORTBbits.RB4 = 1;
        

}
